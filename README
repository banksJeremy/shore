Shore Math Engine
=================

Some math implemented in CoffeeScript, with a browser interface. The 
compiled JavaScript version is included.

Developed with Chrome, should work the same in Safari, a bit less polished in 
Firefox and Opera, and remain functional in IE.

I recommend you download MathJax and put it in ./dep/MathJax/ to use the
interface but should can fall back to a plain text output without it. node.js
and jison are required if you want to modify the parser used by the interface.

Credits
-------

Includes MathJax under Apache 2.0 Open Source License.
Includes jQuery under the MIT license.
Uses CoffeeScript.
Uses Jison.
Original code is by Jeremy Banks <jeremy@jeremybanks.com> and is released
under the MIT license.

Make this decent before showing off.
Every time I try to get something done I fall victim to terrible feature
creep, so I need to decide in advance what the scope of this should be.

TODO
----
Let's start with a relatively minimal set.
- Arithmatic, exponents
- Differentiation, possibly trivial integration
- Margin of error
- Equalities

Scrawl:
- Parse a(b) to a._then(b), for f(x = 1) or 2(b).
- Load the parser after shore into shore.parser.
- If parser is found then (P "a + b") should work, but short-circuit (S 1) 
  and (S "x") the same with or without the parser.
- Don't require whitespace termination unnecessarily, so that things like
  (S "2b") are permitted. (Remember negative lookaheads!)
- Put canonizers separate from other method definitions...
  for class_name, canonizer_getter in {
  	...
  } shore[class_name]._get_canonizer = canonizer_getter
